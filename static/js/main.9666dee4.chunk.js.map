{"version":3,"sources":["Pictures/pepperoni.jpeg","Pictures/sausage.jpg","Pictures/hawaiian.jpg","Pictures/margherita.jpeg","Pictures/supreme.jpg","Pictures/vegetarian.jpg","Pictures/pesto.jpeg","Pictures/shrimp.jpeg","Pictures/bbqchicken.jpg","Pictures/pickle.jpeg","Pictures/potato.jpg","Pictures/cheese.jpg","components/Navbar.js","components/Header.js","components/Body.js","components/Footer.js","components/Image.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","react_default","a","createElement","className","message","correct","topscore","Header","Body","children","Footer","Image","src","alt","name","onClick","clickImage","App","state","picked","shufflePics","array","picArray","Pics","i","length","j","Math","floor","random","_ref","console","log","_this","indexOf","setState","concat","changedImage","pepperoni","sausage","hawaiian","margherita","supreme","vegetarian","pesto","shrimp","bbqChicken","pickle","potato","cheese","_this2","this","components_Navbar","components_Header","components_Body","map","image","components_Image","key","components_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9666dee4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pepperoni.54e253ee.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/sausage.c1bf781e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hawaiian.9752a403.jpg\";","module.exports = __webpack_public_path__ + \"static/media/margherita.1daf3837.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/supreme.fb294418.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vegetarian.208b4969.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pesto.f1079cc4.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/shrimp.9b410743.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/bbqchicken.05c0b9fd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pickle.c569d60e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/potato.c7aa50ba.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cheese.9fde44e9.jpg\";","import React from \"react\";\n\nconst Navbar = (props) => (\n\n  <nav className=\"navbar navbar-light bg-success\">\n  <div>\n    <span className=\"navbar-brand h1 text-center\">Clicky Game</span>\n   <br></br>\n    <span className=\"text-center h3\">{props.message}</span>\n    <br></br>\n    <span className=\"text-dark font-weight-bold\">\n      Score: <span>{props.correct}</span>&nbsp;\n      Top Score: <span>{props.topscore}</span>\n    </span>\n\n   </div> \n  </nav>\n)\nexport default Navbar;","import React from \"react\";\n\nconst Header = () => (\n  <div className=\"jumbotron mt-5\">\n    \n    <h1 className=\"text-center text-light mt-3\">Clicky Game! Pizza Edition</h1>\n    <h3 className=\"text-center text-light\">Click on a pizza to earn points, but don't click on any more than once!</h3>\n    \n  </div>\n)\nexport default Header;","import React from \"react\";\n\nconst Body = (props) =>\n      <div className=\"container text-center image-grid\">\n        {props.children}\n      </div>\n\nexport default Body;","import React from 'react';\n\nconst Footer = () => (\n\n<footer className=\"footer bg-success\">\n    \n      <span className=\"text-dark ml-2\">Clicky Game!\n      </span>\n  \n</footer>\n\n)\nexport default Footer;","import React from 'react';\n\nconst Image = (props) => \n  <img src={props.src} alt={props.name} className=\"thumbnail mb-5\" onClick={() => props.clickImage(props.name)} />\n\n\nexport default Image;","import React, { Component } from 'react';\nimport Navbar from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport Body from \"./components/Body\";\nimport Footer from \"./components/Footer\";\nimport Image from \"./components/Image\";\nimport Pics from \"./components/Pics.json\";\nimport pepperoni from \"./Pictures/pepperoni.jpeg\";\nimport sausage from \"./Pictures/sausage.jpg\";\nimport hawaiian from \"./Pictures/hawaiian.jpg\";\nimport margherita from \"./Pictures/margherita.jpeg\";\nimport supreme from \"./Pictures/supreme.jpg\";\nimport vegetarian from \"./Pictures/vegetarian.jpg\";\nimport pesto from \"./Pictures/pesto.jpeg\";\nimport shrimp from \"./Pictures/shrimp.jpeg\";\nimport bbqChicken from \"./Pictures/bbqchicken.jpg\";\nimport pickle from \"./Pictures/pickle.jpeg\";\nimport potato from \"./Pictures/potato.jpg\";\nimport cheese from \"./Pictures/cheese.jpg\";\n// import logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    picked: [],\n    correct: 0,\n    topscore: 0,\n    message: 'Click an image to begin'\n  };\n  \n  shufflePics = (array) => {\n    let picArray = Pics;\n    for (let i = picArray.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [picArray[i], picArray[j]] = [picArray[j], picArray[i]];\n    }\n    return picArray\n  }\n\n  clickImage = (name) => {\n    console.log(\"Clicked!!\");\n    let picked = this.state.picked;\n    \n    if (picked.indexOf(name) === -1) {\n      this.setState({\n        picked: picked.concat(name),\n        correct: this.state.correct + 1,\n        topscore: this.state.correct + 1 > this.state.topscore ? this.state.correct + 1 : this.state.topscore,\n        message: \"Correct! Pick Another Pizza!\" \n      })\n      this.shufflePics();\n    }\n    else {\n      this.setState({\n        message: \"Incorrect: Play again?\",\n        correct: 0,\n        picked: []\n      })\n    }\n  }\n\n  changedImage = (name) => {\n    switch (name) {\n      case \"pepperoni\":\n        return `${pepperoni}`\n      case \"sausage\":\n        return `${sausage}`\n      case \"hawaiian\":\n        return `${hawaiian}`\n      case \"margherita\":\n        return `${margherita}`\n      case \"supreme\":\n        return `${supreme}`\n      case \"vegetarian\":\n        return `${vegetarian}`\n      case \"pesto\":\n        return `${pesto}`\n      case \"shrimp\":\n        return `${shrimp}`\n      case \"bbqChicken\":\n        return `${bbqChicken}`\n      case \"pickle\":\n        return `${pickle}`\n      case \"potato\":\n        return `${potato}`\n      case \"cheese\":\n        return `${cheese}`\n      default:\n        return `${pepperoni}`\n    }\n  }\n\n  \n  render() {\n    return (\n      <div>\n        <Navbar \n        correct={this.state.correct} \n        topscore={this.state.topscore} \n        message={this.state.message}/>\n        \n        <Header />\n        <Body>\n          {this.shufflePics(Pics).map(image => (\n            <Image src={this.changedImage(image.name)} name={image.name} key={image.name} clickImage={this.clickImage}  />\n          ))}\n        </Body>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n   \n    window.location.hostname === '[::1]' ||\n    \n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n   \n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      \n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        \n        checkValidServiceWorker(swUrl, config);\n\n       \n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        \n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              \n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n             \n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              \n              console.log('Content is cached for offline use.');\n\n              \n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  \n  fetch(swUrl)\n    .then(response => {\n     \n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        \n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        \n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}